openapi: 3.0.0
info:
  title: Restaurant API
  description: Simple API for keeping track of orders in a restaurant.
  version: 0.1.9
tags:
  - name: orders
    description: Information for singular orders
  - name: tables
    description: Orders in the context of the tables they are assigned to
  - name: menu-items
    description: All possible items which can be ordered
paths:
  /tables/{table-number}/orders:
    get:
      tags:
        - tables
      summary: Get all remaining orders for a table
      parameters:
        - name: table-number
          in: path
          description: The table ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  menu_items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
    post:
      tags:
        - tables
      summary: Adds orders to a table
      description: Note that an order-id is required. This can be any integer, as long as it doesn't have the same ID as any other order at that table.
      parameters:
        - name: table-number
          in: path
          description: The table ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orders:
                  type: array
                  items:
                    type: object
                    properties:
                      idempotency_key:
                        type: number
                      menu_item_id:
                        type: number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  added_orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
        '400':
          description: Malformed request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Format of data in body is incorrect"
        '404':
          description: Table does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Table with id 1 does not exist"
        '422':
          description: Invalid item-id or duplicate item-id
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Menu item with id 1 does not exist"
  /orders/{order-id}:
    get:
      tags:
        - orders
      summary: Get information for a specific order of a specific table
      parameters:
        - name: order-id
          in: path
          description: The Order ID
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Table or Order does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Table with id 1 does not exist"
    delete:
      tags:
        - orders
      summary: Delete a given order from a table
      parameters:
        - name: order-id
          in: path
          description: The Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '404':
          description: Table or Order does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Table with id 1 does not exist"
  /menu-items:
    get:
      tags:
        - menu-items
      summary: Get all menu items in the database
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  menu_items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: number
        table_number:
          type: number
        menu_item_id:
          type: number
        menu_item_name:
          type: string
        minutes_to_cook:
          type: number